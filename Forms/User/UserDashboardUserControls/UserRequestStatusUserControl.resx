<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="showCredentialsBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHUSURBVDhPhZLZK4RhFMY/YfZ9jDGMrabU2I24oSHkQkkyFFdKpJALSVlSSDJRylK4QnEncaX8
        bX7nddIwlqeevrM8Z3nf77Vy4XQ6RxwOx6Pdbn+AL/iHLperWdO/w+fzhRBnKT7y+/21EguHw15io8Su
        4DmNBpPJpM0U5CIYDFYivEIwpKE8kGtjo314hz3rdrtLNWWSxwQaQqGQL5VKFWv4R0QikTKGzdPoBm4z
        vMpivVWv1xsmcQ8XROjxeLoRHHC0DlP5DYlEwo52mNprubhlNqjHOYWbgUCgmu8JDXrY7pRmJVqXB3Qb
        0iAbi8VcfOfYpE4607BPBNhyiV1GnY8CckciWmJKWoOWFMMpsRGssMkz34loNOo2AoUeO2vx22ow9jRu
        xeNxJwUnQuK7NE9ir9lstjdpyLFioiPXCRdNEYl1nHbjADkSaE2n00Uaks0WafLKt1d8NpuGxpYtaim4
        +Os36ntZVleGblFTpq6ZME7wkm+jhr5A7gCaBySvlOk7mAXif4LifppcwzPsgdwj5ILJLWxj3syPkPtg
        wgG8RTzDRUY0ZcCASRmm7u/geVfIJGkEtylqymQyhdi7xMtV9j/k14IxCu+Y/sRWqx8Zy3oHatBDHb5y
        YY8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="editRequestBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACfSURBVDhPlZE7EoNADEO5IuflFum4SBoKYxsJaxzY2TDzgn6myWJmf+NP/Lj011PRGW5Gh4ru
        2k2FI3TX9CVGxIY7f1Zq+DJPRK+bvv8JlOi0p3cOyWqgRK6d+qZrRCIj6nsPXQWRMof0RLM0LEhkzob3
        W595GhYIsiTaEe3SsJglbnhHc/8tM+DG5fWBD4Kvjt7A1iU8wp3FDDw2s+UEAT4onQZTQ7YAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="withDrawBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAF2SURBVDhPlZO/SsNQFMaTNG36J22wJZDiFgtCd50qAZ10LDo6iJ0U3AUhL+AgiFsncXXwBRQn
        n6B7RZ9AUNCi8XeSW/vHQtMPPu6537nn5Jxzc7Vp6Lqu2bbdKZfL+0pKjyiK9Fwud2oYxsCyrI6S08H3
        fcc0zWvMSEiiLmzn8/mgUqmsNBoNKz44C7VabTWTyTxhxsHjpCXhO1X1stnsZaFQWEMfAWGP4FfMf8Gz
        SLJPEl01m02bvaZRYle+MjyQlrR7G7clUy+VSsesH9OH5iVmRiesCZj6JgF9zNjJ/lw0Du3CM2Zwj/97
        6BfSeo91BMdxfA4+YkqCw0RNIJUWi8Vt/H/zwv6KneNwXdemvxuGe6SkCZBkh2QDTEnwk6hTCMPQ8DzP
        VdsJBEFgEiilSwtSzWKQVqjwATPiOi8SdQHI1VHBM3ypVqvLSk4PhntA8BsPLlBSauj8L1skuGPA60qb
        D3mhrVZrqV6vb/DVttyScgFN+wXHaGjp9ipNKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>